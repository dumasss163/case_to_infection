xlab("Days since onset of infection") +
ggtitle("Incubation period distribution\n (time from infection to symptoms)") +
scale_y_continuous(limits=c(0,0.3),expand=c(0,0),breaks=seq(0,0.3,by=0.05)) +
scale_x_continuous(expand=c(0,0)) +
theme_pubr()
assumption_plot <- plot_grid(p_other_confirm_fit, p_incubation,ncol=2,align="hv")
assumption_plot
## Fit a geometric distribution to the confirmation delay distribution
fit1 <- optim(c(0.1), fit_geometric, dat=other_dat2$confirmation_delay-1,method="Brent",lower=0,upper=1)
fit_line1 <- dgeom(seq(0,25,by=1),prob=fit1$par)
fit_line_dat1 <- data.frame(x=seq(1,25,by=1),y=fit_line1)
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1) +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(expand=c(0,0),breaks=seq(0,25,by=1)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(expand=c(0,0),breaks=seq(0,25,by=1),limits=c(0,25)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
####################################
## HOSPITALISATION DELAY DISTRIBUTION
####################################
## Fit a geometric distribution to hospitalisation delay distribution
fit2 <- optim(c(0.1), fit_geometric, dat=other_dat1$hospitalisation_delay,method="Brent",lower=0,upper=1)
times <- seq(0,25,by=1)
fit_line2 <- dgeom(times,prob=fit2$par)
fit_line_dat2 <- data.frame(x=times,y=fit_line2)
p_other_hosp_fit<- ggplot(other_dat1) +
geom_histogram(aes(x=hospitalisation_delay,y=..density..),binwidth=1) +
geom_line(data=fit_line_dat2, aes(x=x,y=y), col="red") +
scale_x_continuous(breaks=seq(0,5,by=1)) +
ggtitle("Distribution of delays between symptom onset\n and hospitalisation (not great fit)") +
theme_pubr()
####################################
## SYMPTOM ONSET DISTRIBUTION
####################################
## Going to use a gamma distibution with mode of 10 days
mean_incubation <- 10
var_incubation <- 2
times <- seq(0,25,by=0.1)
incubation_period <- dgamma_mean(times,mean_incubation, var_incubation, FALSE)
inc_data <- data.frame(day=times,probability=incubation_period)
p_incubation <- ggplot(inc_data) +
geom_ribbon(aes(x=times, ymax=incubation_period,ymin=0),fill="grey70",col="black",size=1) +
ylab("Probability") +
xlab("Days since onset of infection") +
ggtitle("Incubation period distribution\n (time from infection to symptoms)") +
scale_y_continuous(limits=c(0,0.3),expand=c(0,0),breaks=seq(0,0.3,by=0.05)) +
scale_x_continuous(expand=c(0,0)) +
theme_pubr()
assumption_plot <- plot_grid(p_other_confirm_fit, p_incubation,ncol=2,align="hv")
assumption_plot
p_incubation
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
# scale_x_continuous(expand=c(0,0),breaks=seq(0,25,by=1),limits=c(0,25)) +
#  scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
## Fit a geometric distribution to the confirmation delay distribution
fit1 <- optim(c(0.1), fit_geometric, dat=other_dat2$confirmation_delay-1,method="Brent",lower=0,upper=1)
fit_line1 <- dgeom(seq(0,25,by=1),prob=fit1$par)
fit_line_dat1 <- data.frame(x=seq(1,25,by=1),y=fit_line1)
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(expand=c(0,0),breaks=seq(0,25,by=1),limits=c(0,25)) +
#  scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
#scale_x_continuous(expand=c(0,0),breaks=seq(0,25,by=1),limits=c(0,25)) +
#  scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
#scale_x_continuous(expand=c(0,0),breaks=seq(0,25,by=1),limits=c(0,25)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(expand=c(0,0),breaks=seq(0,30,by=5)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(expand=c(0,0),breaks=seq(0,30,by=5),labels=seq(0,30,by=5)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(breaks=seq(0,30,by=5),labels=seq(0,30,by=5)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
## Fit a geometric distribution to the confirmation delay distribution
fit1 <- optim(c(0.1), fit_geometric, dat=other_dat2$confirmation_delay-1,method="Brent",lower=0,upper=1)
fit_line1 <- dgeom(seq(0,25,by=1),prob=fit1$par)
fit_line_dat1 <- data.frame(x=seq(1,25,by=1),y=fit_line1)
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(breaks=seq(0,30,by=5),labels=seq(0,30,by=5)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
## Fit a geometric distribution to the confirmation delay distribution
fit1 <- optim(c(0.1), fit_geometric, dat=other_dat2$confirmation_delay-1,method="Brent",lower=0,upper=1)
fit_line1 <- dgeom(seq(0,25,by=1),prob=fit1$par)
fit_line_dat1 <- data.frame(x=seq(0,25,by=1),y=fit_line1)
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(breaks=seq(0,30,by=5),labels=seq(0,30,by=5)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
## Fit a geometric distribution to the confirmation delay distribution
fit1 <- optim(c(0.1), fit_geometric, dat=other_dat2$confirmation_delay-1,method="Brent",lower=0,upper=1)
fit_line1 <- dgeom(seq(0,25,by=1),prob=fit1$par)
fit_line_dat1 <- data.frame(x=seq(1,26,by=1),y=fit_line1)
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(breaks=seq(0,30,by=5),labels=seq(0,30,by=5)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
p_other_confirm_fit<- ggplot(other_dat2) +
geom_histogram(aes(x=confirmation_delay,y=..density..),binwidth=1,col="black") +
geom_line(data=fit_line_dat1, aes(x=x,y=y), col="red") +
scale_x_continuous(breaks=seq(0,30,by=5),labels=seq(0,30,by=5)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.2)) +
geom_vline(xintercept=1,linetype="dashed") +
ggtitle("Distribution of delays between symptom onset and confirmation") +
theme_pubr()
p_other_confirm_fit
source('~/GitHub/case_to_infection/code/analysis.R')
source('~/GitHub/case_to_infection/code/analysis.R')
augmented_data_plot
assumption_plot
source('~/GitHub/case_to_infection/code/analysis.R')
source('~/GitHub/case_to_infection/code/analysis.R')
mean_incubation <- 10
var_incubation <- 15
times <- seq(0,25,by=0.1)
incubation_period <- dgamma_mean(times,mean_incubation, var_incubation, FALSE)
inc_data <- data.frame(day=times,probability=incubation_period)
p_incubation <- ggplot(inc_data) +
geom_ribbon(aes(x=times, ymax=incubation_period,ymin=0),fill="grey70",col="black",size=1) +
ylab("Probability") +
xlab("Days since onset of infection") +
ggtitle("Incubation period distribution\n (time from infection to symptoms)") +
scale_y_continuous(limits=c(0,0.3),expand=c(0,0),breaks=seq(0,0.3,by=0.05)) +
scale_x_continuous(expand=c(0,0)) +
theme_pubr()
assumption_plot <- plot_grid(p_other_confirm_fit, p_incubation,ncol=2,align="hv")
assumption_plot
## Going to use a gamma distibution with mode of 10 days
mean_incubation <- 10
var_incubation <- 15.9
times <- seq(0,25,by=0.1)
incubation_period <- dgamma_mean(times,mean_incubation, var_incubation, FALSE)
inc_data <- data.frame(day=times,probability=incubation_period)
p_incubation <- ggplot(inc_data) +
geom_ribbon(aes(x=times, ymax=incubation_period,ymin=0),fill="grey70",col="black",size=1) +
ylab("Probability") +
xlab("Days since onset of infection") +
ggtitle("Incubation period distribution\n (time from infection to symptoms)") +
scale_y_continuous(limits=c(0,0.3),expand=c(0,0),breaks=seq(0,0.3,by=0.05)) +
scale_x_continuous(expand=c(0,0)) +
theme_pubr()
assumption_plot <- plot_grid(p_other_confirm_fit, p_incubation,ncol=2,align="hv")
assumption_plot
source('~/GitHub/case_to_infection/code/analysis.R')
source('~/GitHub/case_to_infection/code/analysis.R')
augmented_data_plot
source('~/GitHub/case_to_infection/code/analysis.R')
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
#scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
#scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
#             breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
#scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
#             breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,400),expand=c(0,0),breaks=seq(0,400,by=25)) +
#scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
#             breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.11.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.11.2019"),convert_date("27.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.11.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
min(sim_date_quantiles$lower)
min(sim_data_quantiles$lower)
min(sim_data_quantiles$date)
min(sim_data_quantiles$date,na.rm=TRUE)
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ggtitle("Augmented and observed timings\n of infection and symptom onset")
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ggtitle("Augmented and observed timings\n of infection and symptom onset") +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ggtitle("Augmented and observed timings of infection and symptom onset") +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
augmented_data_plot
source('~/GitHub/case_to_infection/code/analysis.R')
augmented_data_plot
assumption_plot
pdf("augmented_data_plot.pdf",height=6,width=5)
augmented_data_plot
dev.off()
pdf("assumption_plot.pdf",height=6,width=5)
assumption_plot
dev.off()
pdf("augmented_data_plot.pdf",height=5,width=7)
augmented_data_plot
dev.off()
pdf("assumption_plot.pdf",height=5,width=7)
assumption_plot
dev.off()
pdf("augmented_data_plot.pdf",height=5,width=7)
augmented_data_plot
dev.off()
pdf("assumption_plot.pdf",height=5,width=7)
assumption_plot
dev.off()
pdf("augmented_data_plot.pdf",height=8,width=10)
augmented_data_plot
dev.off()
pdf("assumption_plot.pdf",height=8,width=12)
assumption_plot
dev.off()
pdf("augmented_data_plot.pdf",height=8,width=10)
augmented_data_plot
dev.off()
pdf("assumption_plot.pdf",height=6,width=12)
assumption_plot
dev.off()
colnames(sim_data_quantiles) <- c("date","Variable","lower","median","upper")
augmented_data_plot <- ggplot(sim_data_quantiles) +
geom_bar(data=confirm_data,aes(x=date_confirmation,y=V1,fill=Variable),stat="identity") +
geom_ribbon(aes(x=date,ymax=upper,ymin=lower,fill=Variable,col=Variable),alpha=0.25) +
geom_line(aes(x=date, y=median,col=Variable),size=1) +
scale_y_continuous(limits=c(0,300),expand=c(0,0),breaks=seq(0,300,by=25)) +
scale_x_date(limits=c(convert_date("01.12.2019"),convert_date("26.01.2020")),
breaks="5 day") +
scale_fill_manual(values=c("orange","grey40","blue")) + scale_color_manual(values=c("orange","blue")) +
ggtitle("Augmented and observed timings of infection and symptom onset in China") +
ylab("Count") + xlab("Date of event") +
theme_pubr() +
theme(axis.text.x=element_text(angle=45,hjust=1),
panel.grid.major = element_line(colour="grey70"),
legend.position = c(0.25,0.75))
#assumption_plot
#augmented_data_plot
pdf("augmented_data_plot.pdf",height=8,width=10)
augmented_data_plot
dev.off()
pdf("assumption_plot.pdf",height=5,width=12)
assumption_plot
dev.off()
head(sim_data_all)
head(sim_data_infections)
head(other_dat)
head(other_dat_china)
class(sim_data_infections)
## Tidy up data to share
sim_data_infections <- as.data.frame(sim_data_infections)
colnames(sim_data_infections)
## Now let's repeat this process many times to get a distribution
sim_data_infections <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
sim_data_symptoms <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
for(i in seq_len(repeats)){
tmp <- augment_infection_times(other_dat_china1, mean_incubation, var_incubation, fit1$par)
sim_data_infections[i,] <- tmp$augmented_infection_times
sim_data_symptoms[i,] <- tmp$augmented_symptom_onsets
}
## Tidy up data to share
sim_data_infections <- as.data.frame(t(sim_data_infections))
head(sim_data_infections)
## Now let's repeat this process many times to get a distribution
sim_data_infections <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
sim_data_symptoms <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
for(i in seq_len(repeats)){
tmp <- augment_infection_times(other_dat_china1, mean_incubation, var_incubation, fit1$par)
sim_data_infections[i,] <- tmp$augmented_infection_times
sim_data_symptoms[i,] <- tmp$augmented_symptom_onsets
}
## Tidy up data to share
sim_data_infections1 <- as.data.frame(t(sim_data_infections))
sim_data_infections1 <- apply(sim_data_infections1, 2, function(x) as.Date(floor(x), origin="1970-01-01"))
head(sim_data_infections1)
head(sim_data_infections1[,1:10])
sim_data_infections1$V1
class(sim_data_infections1)
## Tidy up data to share
sim_data_infections1 <- as.data.frame(t(sim_data_infections))
for(i in seq_len(ncol(sim_data_infections))){
sim_data_infections[,i] <- as.Date(floor(sim_data_infections[,i]), origin="1970-01-01")
}
head(sim_data_infections1)
sim_data_infections <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
sim_data_symptoms <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
for(i in seq_len(repeats)){
tmp <- augment_infection_times(other_dat_china1, mean_incubation, var_incubation, fit1$par)
sim_data_infections[i,] <- tmp$augmented_infection_times
sim_data_symptoms[i,] <- tmp$augmented_symptom_onsets
}
## Tidy up data to share
sim_data_infections1 <- as.data.frame(t(sim_data_infections))
for(i in seq_len(ncol(sim_data_infections))){
sim_data_infections[,i] <- as.Date(floor(sim_data_infections[,i]), origin="1970-01-01")
}
for(i in seq_len(ncol(sim_data_infections1))){
sim_data_infections1[,i] <- as.Date(floor(sim_data_infections[,i]), origin="1970-01-01")
}
## Now let's repeat this process many times to get a distribution
sim_data_infections <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
sim_data_symptoms <- matrix(NA, nrow=repeats, ncol=nrow(other_dat_china))
for(i in seq_len(repeats)){
tmp <- augment_infection_times(other_dat_china1, mean_incubation, var_incubation, fit1$par)
sim_data_infections[i,] <- tmp$augmented_infection_times
sim_data_symptoms[i,] <- tmp$augmented_symptom_onsets
}
## Tidy up data to share
sim_data_infections1 <- as.data.frame(t(sim_data_infections))
for(i in seq_len(ncol(sim_data_infections1))){
sim_data_infections1[,i] <- as.Date(floor(sim_data_infections1[,i]), origin="1970-01-01")
}
head(sim_data_infections[,1:10])
head(sim_data_infections1[,1:10])
head(other_dat_china)
source('~/GitHub/case_to_infection/code/analysis.R')
head(sim_data_symptoms1)
head(sim_data_symptoms1[,1:25])
source('~/GitHub/case_to_infection/code/analysis.R')
write.csv(sim_data_infections1, "augmented_infection_times.csv")
write.csv(sim_data_infections1, "augmented_symptom_times.csv")
write.csv(sim_data_infections1, "augmented_infection_times.csv")
write.csv(sim_data_symptoms1, "augmented_symptom_times.csv")
source("analysis.R")
source("code/analysis.R")
knitr::opts_chunk$set(echo = TRUE)
p_other_confirm_fit
source("code/analysis.R")
knitr::opts_chunk$set(echo = TRUE)
source("code/analysis.R")
knitr::opts_chunk$set(echo = TRUE)
p_data_augmented_example
View(other_dat_tmp)
